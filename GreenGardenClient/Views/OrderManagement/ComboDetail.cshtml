@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model GreenGardenClient.Models.ComboDetailVM
@using GreenGardenClient.Models




<!DOCTYPE html>
<html lang="en">

<head>
    <title>Tạo đơn hàng | Chi tiết Combo</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Main CSS-->
    <link rel="stylesheet" type="text/css" href="~/css/main.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <!-- or -->
    <link rel="stylesheet" href="https://unpkg.com/boxicons@latest/css/boxicons.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

    <!-- Font-icon css-->
    <link rel="stylesheet" type="text/css"
          href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">



</head>
<header class="app-header">
    <!-- Sidebar toggle button-->
    <!-- Navbar Right Menu-->
    <ul class="app-nav">


        <!-- User Menu-->
        <li>
            <a class="app-nav__item" href="/index.html"><i class='bx bx-log-out bx-rotate-180'></i> </a>

        </li>
    </ul>
</header>
<style>

    .search-container {
        display: flex;
        align-items: center;
        justify-content: flex-start;
    }

        .search-container label {
            margin-right: 10px; /* Khoảng cách giữa nhãn và ô input */
            font-weight: bold; /* Làm đậm nhãn để giống trong hình */
        }

        .search-container input {
            background-color: #f5f5f5; /* Màu nền cho ô input */
            border: 1px solid #ddd; /* Viền nhạt cho ô input */
            padding: 5px;
            border-radius: 5px; /* Bo góc cho ô input */
            width: 200px; /* Độ rộng cho ô input */
        }

    .pagination {
        display: flex;
        align-items: center;
        justify-content: flex-end; /* Căn chỉnh các phần tử về phía bên phải */
    }

    .container-pagination-cart {
        display: flex;
        justify-content: space-between; /* Đưa nút giỏ hàng sang trái và phân trang sang phải */
        align-items: center; /* Căn giữa theo chiều dọc */
        margin-bottom: 20px; /* Khoảng cách dưới nếu cần */
    }

    .pagination {
        list-style: none; /* Bỏ các dấu bullet */
        padding: 0;
        margin: 0;
        display: flex; /* Hiển thị các mục theo hàng ngang */
    }

        .pagination li {
            margin-left: 5px; /* Khoảng cách giữa các nút */
        }

    .page-link {
        text-decoration: none;
        padding: 5px 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
        color: #007bff;
    }

    .btn-primary {
        display: flex;
        align-items: center;
        font-size: 16px;
        padding: 5px 10px;
    }


    /* Đặt nền màu #eee cho cả header và sidebar */
    .app-header, .app-sidebar {
        background-color: #eee;
    }

    .app-header {
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        width: 100%;
        display: flex;
        align-items: center;
        padding: 15px;
        z-index: 1;
    }

        .app-header .app-nav {
            margin-left: auto;
        }

    .app-nav__item {
        text-decoration: none;
        color: #333;
        padding: 8px 15px;
        display: flex;
        align-items: center;
    }

    .app-sidebar {
        position: fixed;
        top: 0px; /* Để không đè lên header */
        left: 0;
        width: 250px;
        height: 100%;
        padding-top: 20px;
        background-color: #eee;
        border-right: 1px solid #ccc; /* Viền phải của sidebar */
    }

    .app-sidebar__user {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .app-sidebar__user-avatar {
        width: 100px; /* hoặc một giá trị cụ thể khác tùy thuộc vào kích thước bạn muốn */
        height: 100px; /* cần phải bằng width */
        border-radius: 50%;
        margin-right: 10px;
        object-fit: cover; /* Đảm bảo hình ảnh không bị méo */
    }

    .app-sidebar__user-name {
        margin: 0;
        font-weight: bold;
        color: black;
    }

    .app-sidebar__user-designation {
        margin: 0;
        color: black;
    }

    .app-menu {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .app-menu__item {
        text-decoration: none;
        color: #333;
        display: flex;
        align-items: center;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
    }

        .app-menu__item:hover {
            background-color: #ddd;
        }

    .app-menu__icon {
        margin-right: 10px;
        color: #333;
    }

    .app-menu__item.active {
        background-color: #ccc;
        font-weight: bold;
    }

    hr {
        border: 1px solid #ccc;
        margin: 10px 0;
    }
    /* Ẩn submenu mặc định */
    .submenu {
        display: none;
        list-style-type: none;
        padding-left: 20px;
    }

    /* Hiển thị submenu khi có class 'open' */
    .has-submenu.open .submenu {
        display: block;
    }
    /* chỉnh icon cho app menu' */
    .app-menu__item {
        text-decoration: none;
        color: #333;
        padding: 10px 20px;
        display: block;
        transition: background-color 0.3s ease;
    }

        .app-menu__item:hover {
            background-color: #ddd;
        }

    .submenu .app-menu__item {
        padding-left: 40px; /* Đẩy các mục con thụt vào */
    }

    .app-menu__item {
        display: flex;
        align-items: center;
        text-decoration: none;
        color: #333;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
    }

        .app-menu__item i {
            margin-right: 10px; /* Khoảng cách giữa icon và chữ */
            font-size: 18px; /* Kích thước icon */
        }

        .app-menu__item:hover {
            background-color: #ddd;
        }


    /* Icon phóng to */
    .zoom-icon {
        color: #333;
        background: rgba(255, 255, 255, 0.7);
        border-radius: 50%;
        padding: 5px;
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 24px;
        cursor: pointer;
    }

    /* CSS cho modal */
    .modal {
        display: none; /* Ẩn modal ban đầu */
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.8);
    }

    .modal-content {
        margin: auto;
        display: block;
        width: 80%;
        max-width: 700px;
    }

    .modal-content, .close {
        animation: zoomAnimation 0.6s;
    }



    /* Đóng modal */
    .close {
        position: absolute;
        top: 20px;
        right: 35px;
        color: #fff;
        font-size: 40px;
        font-weight: bold;
        cursor: pointer;
    }

        .close:hover, .close:focus {
            color: #f00;
            text-decoration: none;
            cursor: pointer;
        }
/* Tổng thể card-text */
.card-text {
    font-family: 'Arial', sans-serif;
    font-size: 16px;
    color: #333;
    margin-bottom: 15px;
}

/* Đặt khoảng cách và canh giữa */
.card-text span {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
}

/* Khoảng cách icon với văn bản */
.card-text i {
    margin-right: 8px;
    font-size: 20px;
            color: #333; /* Màu icon */
}

/* Màu sắc cho văn bản và khoảng cách */
.card-text .ml-2 {
    margin-left: 10px;
    color: #555;
}

/* Điều chỉnh cho d-flex flex-wrap */
.d-flex.flex-wrap {
    gap: 10px;
}

/* Styling cho số điện thoại */
.card-text span:first-child {
    font-weight: bold;
    color: #333;
}

    /* Canh thời gian gần hơn về bên trái */
    .card-text span:nth-child(2) {
        justify-content: flex-start; /* Lùi thời gian về bên trái */
        margin-right: 30px; /* Điều chỉnh khoảng cách để kéo thời gian sang trái */
        font-style: italic;
        color: #28a745;
    }

/* Style cho thông tin đồ uống */
.card-text span:nth-child(3) {
    color: #ff6347;
}

/* Style cho quy định chiều cao */
.card-text span:nth-child(4) {
    color: #6c757d;
    font-size: 14px;
    line-height: 1.5;
}

/* Thêm hiệu ứng khi hover */
.card-text span:hover {
        color: #333;
    transition: color 0.3s ease-in-out;
}

    .dotted-line {
        border: none;
        border-top: 1px dotted #ccc; /* Đường kẻ chấm chấm màu xám */
        color: #fff;
        background-color: #fff;
        height: 1px;
        width: 100%;
        margin: 15px 0; /* Khoảng cách trên dưới */
    }

    ul li a {
        text-decoration: none; /* Bỏ gạch chân mặc định */
        color: #333; /* Màu chữ cho liên kết */
    }

        ul li a:hover {
            text-decoration: underline; /* Hiệu ứng khi hover */
            color: #0056b3; /* Đổi màu khi hover */
        }

    .quantity-container {
        display: flex;
        align-items: center;
        font-size: 16px;
        margin: 10px 0;
    }

        .quantity-container i {
            margin-right: 8px;
            color: black;
            font-size: 18px;
        }

    .quantity-controls {
        display: flex;
        align-items: center;
        margin-left: 10px;
    }

        .quantity-controls button {
            padding: 5px 15px;
            background-color: #f39c12;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 4px;
            font-size: 18px;
            margin: 0 5px;
        }

            .quantity-controls button:hover {
                background-color: #2980b9;
            }

        .quantity-controls input {
            text-align: center;
            width: 50px;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
            margin: 0 5px;
        }

 
</style>
<body onload="time()" class="app sidebar-mini rtl">
    <header class="app-header" style="display: flex; align-items: center; padding: 0 15px; background-color: #f6f5f5 !important;">
        <!-- Sidebar Toggle -->
        <a class="app-sidebar__toggle" href="#" data-toggle="sidebar" aria-label="Hide Sidebar" style="margin-right: auto;">
            <!-- Add an icon or text for the sidebar toggle -->
        </a>

        <!-- Centered Logo -->
        <div style="flex: 500; display: flex; justify-content: center; align-items: center; padding-left: 50px;">
            <img src="~/images/newlogo.jpg" alt="Logo" style="height: auto; width: 55%; max-width: 120px;margin-top: 10px;">
        </div>


        <!-- User Menu -->
        <ul class="app-nav" style="display: flex; align-items: center; margin-left: auto; list-style: none; padding: 0;">
            <li>
                <a class="app-nav__item" href="~/Home" style="display: flex; align-items: center; text-decoration: none; color: black; background: rgb(195 195 195); padding: 10px 15px; border-radius: 5px; transition: background-color 0.3s;">
                    <!-- Replace with an icon -->
                    <i class="bx bx-home" style="font-size: 1.5rem; margin-right: 8px;"></i>
                    <!-- Add text next to the icon -->
                    <span style="font-size: 1rem;">Quay lại trang chủ</span>
                </a>
            </li>
        </ul>

    </header>

    <!-- Sidebar menu-->
    <div class="app-sidebar__overlay" data-toggle="sidebar"></div>
    <aside class="app-sidebar">
        <a class="app-sidebar__toggle" href="#" data-toggle="sidebar"
           aria-label="Hide Sidebar"></a>
        <div class="app-sidebar__user">
            @if (@HttpContextAccessor.HttpContext.Session.GetString("Img") == null)
            {

                <img src="~/images/p22.jpg" alt="Trang cá nhân" class="app-sidebar__user-avatar" width="50px">

            }
            else
            {
                <img src="@HttpContextAccessor.HttpContext.Session.GetString("Img")" alt="Trang cá nhân" class="app-sidebar__user-avatar" src="~/images/img_1.jpg" width="50px">
            }               <div>
                <p class="app-sidebar__user-designation">Xin chào</p>

                <p class="app-sidebar__user-name"><b>@HttpContextAccessor.HttpContext.Session.GetString("Fullname")</b></p>
            </div>
        </div>
        <hr>
        <ul class="app-menu">
            <style>


                .app-menu__item.selected {
                    font-weight: bold;
                }

            </style>
            @if (HttpContextAccessor.HttpContext.Session.GetInt32("RoleId") == 1)
            {
                <li>
                    <a class="app-menu__item" href="~/DashBoard">
                        <i class='app-menu__icon bx bx-task'></i>
                        <span class="app-menu__label">Thống kê</span>
                    </a>
                </li>
            }
            <li class="has-submenu" style="display:block" id="manageOrdersMenu">
                <a class="app-menu__item" href="javascript:void(0)" id="manageOrders">
                    <i class='app-menu__icon bx bx-id-card'></i>
                    <span class="app-menu__label">Quản lý Đơn hàng</span>
                </a>
                <!-- Submenu items -->
                <ul class="submenu" style="display: none;" id="submenuList">
                    <li>
                        <a href="~/OrderManagement/OrderOnline" class="app-menu__item" id="orderOnline">
                            <i class='bx bx-notepad'></i> Đơn đặt trước
                        </a>
                    </li>
                    <li>
                        <a href="~/OrderManagement/OrderUsing" class="app-menu__item" id="orderUsing">
                            <i class='bx bx-time-five'></i> Đơn đang sử dụng
                        </a>
                    </li>
                    <li>
                        <a href="~/OrderManagement/OrderCheckOut" class="app-menu__item" id="orderCheckOut">
                            <i class='bx bx-check-circle'></i> Đơn đã thanh toán
                        </a>
                    </li>
                    <li>
                        <a href="~/OrderManagement/OrderCancel" class="app-menu__item" id="orderCancel">
                            <i class='bx bx-x-circle'></i> Đơn đã hủy
                        </a>
                    </li>
                    <li>
                        <a href="~/OrderManagement/CreateOrder" class="app-menu__item" id="createOrder">
                            <i class='bx bx-plus'></i> Tạo đơn mới
                        </a>
                    </li>
                </ul>
            </li>

            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    const submenu = document.getElementById("submenuList");
                    const manageOrdersMenu = document.getElementById("manageOrdersMenu");
                    const manageOrdersButton = document.getElementById("manageOrders");
                    const submenuItems = document.querySelectorAll("#manageOrdersMenu .submenu .app-menu__item");

                    const currentUrl = window.location.pathname;

                    console.log("Current URL:", currentUrl);

                    // Map submenu items with their corresponding IDs and URLs
                    const menuMappings = {
                        "orderOnline": "/OrderOnline",
                        "orderUsing": "/OrderUsing",
                        "orderCheckOut": "/OrderCheckOut",
                        "orderCancel": "/OrderCancel",
                        "createOrder": "/CreateOrder",
                    };

                    // Reset all submenu items before highlighting
                    submenuItems.forEach(item => {
                        item.classList.remove("selected");
                        console.log("Removed 'selected' class from:", item.id);
                    });

                    // Automatically open submenu and highlight based on URL or localStorage
                    let matched = false; // Flag to track if a match was found
                    for (const [id, path] of Object.entries(menuMappings)) {
                        if (currentUrl.includes(path)) {
                            console.log(`URL match found for path: ${path} (ID: ${id})`);
                            const activeItem = document.getElementById(id);
                            if (activeItem) {
                                activeItem.classList.add("selected"); // Highlight active submenu item
                                console.log("Active submenu item set to:", id);
                                submenu.style.display = "block"; // Keep submenu open
                                console.log("Submenu opened.");
                                manageOrdersMenu.classList.add("selected"); // Highlight parent menu
                                localStorage.setItem("activeSubmenuItem", id); // Save the active submenu item
                                console.log("Saved active submenu item to localStorage:", id);
                            }
                            matched = true;
                            break;
                        }
                    }

                    if (!matched) {
                        console.log("No matching submenu item for the current URL.");
                    }

                    // Restore submenu state and active submenu item on page load
                    const savedActiveItem = localStorage.getItem("activeSubmenuItem");
                    console.log("Saved active item from localStorage:", savedActiveItem);

                    if (!matched && savedActiveItem) {
                        const activeItem = document.getElementById(savedActiveItem);
                        if (activeItem) {
                            activeItem.classList.add("selected");
                            console.log("Restored active submenu item from localStorage:", savedActiveItem);
                            submenu.style.display = "block";
                            console.log("Submenu reopened based on saved state.");
                            manageOrdersMenu.classList.add("selected");
                        }
                    }

                    // Toggle submenu visibility only when clicking the parent menu
                    manageOrdersButton.addEventListener("click", function (event) {
                        event.stopPropagation(); // Prevent event bubbling
                        const isVisible = submenu.style.display === "block";
                        submenu.style.display = isVisible ? "none" : "block";

                        console.log(`Parent menu clicked. Submenu visibility toggled to: ${isVisible ? "hidden" : "visible"}`);

                        if (!isVisible) {
                            // Restore active state if submenu is reopened
                            const savedItem = localStorage.getItem("activeSubmenuItem");
                            if (savedItem) {
                                document.getElementById(savedItem)?.classList.add("selected");
                                console.log("Restored active submenu item on reopening:", savedItem);
                            }
                        }
                    });

                    // Ensure submenu stays open when clicking a submenu item and save active state
                    submenuItems.forEach(item => {
                        item.addEventListener("click", function (event) {
                            submenu.style.display = "block"; // Ensure submenu stays open
                            console.log("Submenu item clicked:", this.id);

                            // Save the clicked submenu item as active
                            submenuItems.forEach(i => {
                                i.classList.remove("selected"); // Remove active class from all items
                                console.log("Removed 'selected' class from:", i.id);
                            });
                            this.classList.add("selected"); // Add active class to clicked item
                            console.log("Set 'selected' class for:", this.id);
                            localStorage.setItem("activeSubmenuItem", this.id); // Save to localStorage
                            console.log("Saved new active submenu item to localStorage:", this.id);
                        });
                    });
                });

            </script>

            <li>
                <a class="app-menu__item" href="~/TicketManagement/Index">
                    <i class='app-menu__icon bx bx-receipt'></i> <!-- Receipt icon as alternative -->
                    <span class="app-menu__label">Quản lý vé</span>
                </a>
            </li>

            <li>
                <a class="app-menu__item" href="~/GearManagement/Index">
                    <i class='app-menu__icon bx bx-wrench'></i> <!-- Gear/Tools icon -->
                    <span class="app-menu__label">Quản lý dụng cụ</span>
                </a>
            </li>
            <li>
                <a class="app-menu__item" href="~/FoodAndDrinkManagement/Index">
                    <i class='app-menu__icon bx bx-coffee'></i> <!-- Food and drink icon -->
                    <span class="app-menu__label">Quản lý đồ ăn</span>
                </a>
            </li>
            <li>
                <a class="app-menu__item" href="~/EventManagement/Index">
                    <i class='app-menu__icon bx bx-calendar-event'></i>
                    <span class="app-menu__label">Quản lý sự kiện</span>
                </a>
            </li>
            @if (HttpContextAccessor.HttpContext.Session.GetInt32("RoleId") == 1)
            {
                <li>
                    <a class="app-menu__item" href="~/UserManagement/Index">
                        <i class='app-menu__icon bx bx-user-voice'></i>
                        <span class="app-menu__label">Quản lý khách hàng</span>
                    </a>
                </li>
                <li>
                    <a class="app-menu__item" href="~/EmployeeManagement/Index">
                        <i class='app-menu__icon bx bx-purchase-tag-alt'></i>
                        <span class="app-menu__label">Quản lý nhân viên</span>
                    </a>
                </li>
            }

        </ul>
    </aside>

    <main class="app-content">
        <div class="app-title">
            <ul class="app-breadcrumb breadcrumb side">
                <li class="breadcrumb-item active">Quản lí đơn hàng/Tạo đơn hàng/Chi tiết combo</li>
            </ul>
            <div id="clock"></div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="tile">
                    <div class="tile-body row">
                        <!-- Image Section -->
                        <div class="col-md-4">
                            <div class="product-image position-relative">
                                <!-- Zoom Icon -->
                                <i class="zoom-icon fa fa-search-plus" onclick="openModal()" style="position: absolute; top: 10px; right: 10px; font-size: 24px; cursor: pointer;"></i>

                                <!-- Image -->
                                <img src="~/images/Combo/@Model.ImgUrl" alt="Product Image" class="img-fluid img-thumbnail" id="productImage">
                            </div>

                            <!-- Modal for Zoomed Image -->
                            <div id="imageModal" class="modal" onclick="closeModal()">
                                <span class="close">&times;</span>
                                <img class="modal-content" id="zoomedImage">
                            </div>
                        </div>

                        <!-- Content Section -->
                        <div class="col-md-8">
                            <div class="card-body">
                                <h5 class="card-title">@Model.ComboName</h5>
                                <p class="card-text d-flex flex-wrap justify-content-between">
                                    <span class="d-flex align-items-center">
                                        <i class="bi bi-geo-alt"></i>
                                        <span class="ml-2">Số Đt:0987327669 / 0964373999</span>
                                    </span>
                                    <span class="d-flex align-items-center">
                                        <i class="bi bi-calendar"></i>
                                        <span class="ml-2">Thời gian: 8h-23h</span>
                                    </span>



                                </p>

                                <p class="card-text d-flex flex-wrap justify-content-between">
                                    <span class="d-flex align-items-center">
                                        <i class="bi bi-cup"></i> <!-- Icon cho đồ uống -->
                                        <span class="ml-2">Giá trên chưa bao gồm đồ uống</span>
                                    </span>
                                   

                                </p>
                                <div style="display: flex; align-items: center;">
                                    <h3 class="price">
                                        <i class="fas fa-tag" style="margin-right: 10px;"></i>
                                        <span style="color: red;">@String.Format("{0:0,0} ₫", @Model.Price)<small>/ khách</small></span>
                                    </h3>

                                </div>
                                <hr class="dotted-line">
                                <p>Combo bao gồm:</p>
                                <ul>
                                    <li><a href="link-to-tent.html">Miễn phí vé vào cổng</a></li>

                                    @foreach (var item in Model.ComboTicketDetails)
                                    {
                                        <li><a href="link-to-tent.html">@item.Name</a></li>

                                    }
                                    @foreach (var item in Model.ComboCampingGearDetails)
                                    {
                                        <li><a href="link-to-tent.html">@item.Name</a></li>

                                    }
                                    @foreach (var item in Model.ComboFootDetails)
                                    {
                                        <li><a href="link-to-tent.html">@item.Name</a></li>

                                    }
                                    
                                    <li><a href="link-to-playground.html">Khu vui chơi miễn phí: Bể bơi ngoài trời, trượt cỏ, chơi nhà bóng, chăm sóc vật nuôi...</a></li>
                                </ul>
                                <hr class="dotted-line">
                       <form asp-controller="OrderManagement" asp-action="ComboDetailCart" method="post">

                                <div class="quantity-container">
                                    <i class="fas fa-coins"></i> Số lượng:
                                    <div class="quantity-controls">
                                        <button onclick="decreaseValue(event)">−</button>
                                        <input readonly type="number" id="quantity"  value="@Model.Quantity" name="quantity" />
                                        <input hidden name="id" value="@Model.ComboId"></input>
                                        <input hidden name="name" value="@Model.ComboName"></input>
                                        <input hidden name="price" value="@Model.Price"></input>
                                        <button onclick="increaseValue(event)">+</button>
                                    </div>

                                </div>
                                
                                <div class="d-flex justify-content-end mt-3">
                                        <button class="btn btn-secondary" onclick="goBack()" style="margin-left:20px"> <i class="fas fa-arrow-left"></i> Quay lại</button>

                                        <button class="btn btn-primary me-2" onclick="addToCart()"> <i class="fas fa-shopping-cart"></i> Thêm vào giỏ hàng</button>
                                </div>

                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>



           

    </main>



    <script>
        function increaseValue(event) {
            event.preventDefault(); // Prevent form submission
            var value = parseInt(document.getElementById('quantity').value, 10);
            value = isNaN(value) ? 0 : value;
            value++;
            document.getElementById('quantity').value = value;
        }

        function decreaseValue(event) {
            
            event.preventDefault(); // Prevent form submission
            
            var value = parseInt(document.getElementById('quantity').value, 10);
            value = isNaN(value) ? 0 : value;
            value = value > 0 ? value - 1 : 0;
            document.getElementById('quantity').value = value;

            // Show alert when value reaches 0
            
        }
    </script>

    <script>

        // Hàm mở modal và hiển thị ảnh phóng to
        function openModal() {
            var modal = document.getElementById("imageModal");
            var img = document.getElementById("productImage");
            var modalImg = document.getElementById("zoomedImage");

            modal.style.display = "block";
            modalImg.src = img.src; // Hiển thị ảnh trong modal
        }

        // Hàm đóng modal khi nhấp vào biểu tượng đóng
        function closeModal() {
            var modal = document.getElementById("imageModal");
            modal.style.display = "none";
        }


    </script>



    <script>

        document.getElementById('manageOrders').addEventListener('click', function () {
            this.parentElement.classList.toggle('open'); // Bật/tắt class 'open' để mở/đóng submenu
        });

    </script>
    
    <script>
        // Hàm giảm số lượng sản phẩm
        function decreaseQuantity() {
            let quantityInput = document.getElementById('quantity');
            let currentValue = parseInt(quantityInput.value);

            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
            }
        }

        // Hàm tăng số lượng sản phẩm
        function increaseQuantity() {
            let quantityInput = document.getElementById('quantity');
            let currentValue = parseInt(quantityInput.value);

            quantityInput.value = currentValue + 1;
        }




    </script>
 



    </script>
    <script src="~/js/jquery-3.2.1.min.js"></script>
    <script src="~/js/popper.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="~/src/jquery.table2excel.js"></script>
    <script src="~/js/main.js"></script>
    <!-- The javascript plugin to display page loading on top-->
    <script src="js/plugins/pace.min.js"></script>
    <!-- Page specific javascripts-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
    <!-- Data table plugin-->
    <script type="text/javascript" src="~/js/plugins/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="~/js/plugins/dataTables.bootstrap.min.js"></script>
    <script type="text/javascript">$('#sampleTable').DataTable();</script>
    <script>

        oTable = $('#sampleTable').dataTable();
        $('#all').click(function (e) {
            $('#sampleTable tbody :checkbox').prop('checked', $(this).is(':checked'));
            e.stopImmediatePropagation();
        });


        function time() {
            var today = new Date();
            var weekday = new Array(7);
            weekday[0] = "Chủ Nhật";
            weekday[1] = "Thứ Hai";
            weekday[2] = "Thứ Ba";
            weekday[3] = "Thứ Tư";
            weekday[4] = "Thứ Năm";
            weekday[5] = "Thứ Sáu";
            weekday[6] = "Thứ Bảy";
            var day = weekday[today.getDay()];
            var dd = today.getDate();
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear();
            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            m = checkTime(m);
            s = checkTime(s);
            nowTime = h + " giờ " + m + " phút " + s + " giây";
            if (dd < 10) {
                dd = '0' + dd
            }
            if (mm < 10) {
                mm = '0' + mm
            }
            today = day + ', ' + dd + '/' + mm + '/' + yyyy;
            tmp = '<span class="date"> ' + today + ' - ' + nowTime +
                '</span>';
            document.getElementById("clock").innerHTML = tmp;
            clocktime = setTimeout("time()", "1000", "Javascript");

            function checkTime(i) {
                if (i < 10) {
                    i = "0" + i;
                }
                return i;
            }
        }
        ;
    </script>
    <script>

        // Hàm giảm số lượng sản phẩm
        function decreaseQuantity(event) {
            event.preventDefault(); // Ngăn không cho form submit khi bấm nút

            let quantityInput = document.getElementById('quantity');
            let remainingQuantitySpan = document.querySelector('.remaining-quantity-value');

            let currentValue = parseInt(quantityInput.value);
            let remainingQuantity = parseInt(remainingQuantitySpan.textContent);

            if (currentValue > 0) {
                quantityInput.value = currentValue - 1;
                remainingQuantitySpan.textContent = remainingQuantity + 1; // Tăng số lượng còn lại
            } else {
                alert("Số lượng không thể nhỏ hơn 0");
            }
        }

        // Hàm tăng số lượng sản phẩm
        function increaseQuantity(event) {
            event.preventDefault(); // Ngăn không cho form submit khi bấm nút

            let quantityInput = document.getElementById('quantity');
            let remainingQuantitySpan = document.querySelector('.remaining-quantity-value');

            let currentValue = parseInt(quantityInput.value);
            let remainingQuantity = parseInt(remainingQuantitySpan.textContent);

            if (remainingQuantity > 0) { // Kiểm tra xem còn hàng hay không
                quantityInput.value = currentValue + 1;
                remainingQuantitySpan.textContent = remainingQuantity - 1; // Giảm số lượng còn lại
            } else {
                alert("Hết hàng");
            }
        }




    </script>
</body>

</html>
