@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@model Account
@using GreenGardenClient.Models
}
@{
    if (ViewBag.Notification != null)
    {
        <div id="notification" class="alert alert-warning" role="alert">
            @ViewBag.Notification
        </div>
    }
}
<style>
    #notification {
        position: fixed;
        top: 20px; /* Khoảng cách từ đầu trang */
        right: 20px; /* Khoảng cách từ bên phải */
        z-index: 1050; /* Đảm bảo thông báo nằm trên các phần tử khác */
        opacity: 1; /* Bắt đầu với độ mờ là 1 */
        transition: opacity 1s ease-out, transform 1s ease-out; /* Hiệu ứng chuyển đổi cho độ mờ và biến đổi */
        transform: translateY(-10px); /* Đưa thông báo lên một chút */
        width: auto; /* Hoặc thay đổi thành một giá trị cụ thể, ví dụ: 300px */
        max-width: 300px; /* Giới hạn chiều rộng tối đa */
        padding: 15px; /* Khoảng cách bên trong cho thông báo */
    }
</style>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        if ($("#notification").length) {
            setTimeout(function () {
                $("#notification").css("opacity", "0"); // Đặt độ mờ thành 0
                $("#notification").css("transform", "translateY(10px)"); // Đưa thông báo xuống một chút khi ẩn
            }, 3000); // Sau 3 giây
        }
    });
</script>
<meta charset="UTF-8">

<!DOCTYPE html>
<html lang="en">

<head>
    <title>Danh sách người dùng | Chi tiết người dùng</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Main CSS-->
    <link rel="stylesheet" type="text/css" href="~/css/main.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <!-- or -->
    <link rel="stylesheet" href="https://unpkg.com/boxicons@latest/css/boxicons.min.css">

    <!-- Font-icon css-->
    <link rel="stylesheet" type="text/css"
          href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">




</head>
<header class="app-header">
    <!-- Sidebar toggle button--><a class="app-sidebar__toggle" href="#" data-toggle="sidebar"
                                    aria-label="Hide Sidebar"></a>
    <!-- Navbar Right Menu-->
    <ul class="app-nav">


        <!-- User Menu-->
        <li>
            <a class="app-nav__item" href="/index.html"><i class='bx bx-log-out bx-rotate-180'></i> </a>

        </li>
    </ul>
</header>
<style>





    .search-container {
        display: flex;
        align-items: center;
        justify-content: flex-start;
    }

        .search-container label {
            margin-right: 10px; /* Khoảng cách giữa nhãn và ô input */
            font-weight: bold; /* Làm đậm nhãn để giống trong hình */
        }

        .search-container input {
            background-color: #f5f5f5; /* Màu nền cho ô input */
            border: 1px solid #ddd; /* Viền nhạt cho ô input */
            padding: 5px;
            border-radius: 5px; /* Bo góc cho ô input */
            width: 200px; /* Độ rộng cho ô input */
        }

    .pagination {
        display: flex;
        align-items: center;
        justify-content: flex-end; /* Căn chỉnh các phần tử về phía bên phải */
    }

    .container-pagination-cart {
        display: flex;
        justify-content: space-between; /* Đưa nút giỏ hàng sang trái và phân trang sang phải */
        align-items: center; /* Căn giữa theo chiều dọc */
        margin-bottom: 20px; /* Khoảng cách dưới nếu cần */
    }

    .pagination {
        list-style: none; /* Bỏ các dấu bullet */
        padding: 0;
        margin: 0;
        display: flex; /* Hiển thị các mục theo hàng ngang */
    }

        .pagination li {
            margin-left: 5px; /* Khoảng cách giữa các nút */
        }

    .page-link {
        text-decoration: none;
        padding: 5px 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
        color: #007bff;
    }

    .btn-primary {
        display: flex;
        align-items: center;
        font-size: 16px;
        padding: 5px 10px;
    }


    /* Đặt nền màu #eee cho cả header và sidebar */
    .app-header, .app-sidebar {
        background-color: #eee;
    }

    .app-header {
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        width: 100%;
        display: flex;
        align-items: center;
        padding: 15px;
        z-index: 1;
    }

        .app-header .app-nav {
            margin-left: auto;
        }

    .app-nav__item {
        text-decoration: none;
        color: #333;
        padding: 8px 15px;
        display: flex;
        align-items: center;
    }

    .app-sidebar {
        position: fixed;
        top: 0px; /* Để không đè lên header */
        left: 0;
        width: 250px;
        height: 100%;
        padding-top: 20px;
        background-color: #eee;
        border-right: 1px solid #ccc; /* Viền phải của sidebar */
    }


    .app-sidebar__user {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .app-sidebar__user-avatar {
        width: 100px; /* hoặc một giá trị cụ thể khác tùy thuộc vào kích thước bạn muốn */
        height: 100px; /* cần phải bằng width */
        border-radius: 50%;
        margin-right: 10px;
        object-fit: cover; /* Đảm bảo hình ảnh không bị méo */
    }

    .app-sidebar__user-name {
        margin: 0;
        font-weight: bold;
        color: black;
    }

    .app-sidebar__user-designation {
        margin: 0;
        color: black;
    }

    .app-menu {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .app-menu__item {
        text-decoration: none;
        color: #333;
        display: flex;
        align-items: center;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
    }

        .app-menu__item:hover {
            background-color: #ddd;
        }

    .app-menu__icon {
        margin-right: 10px;
        color: #333;
    }

    .app-menu__item.active {
        background-color: #ccc;
        font-weight: bold;
    }

    hr {
        border: 1px solid #ccc;
        margin: 10px 0;
    }
    /* Ẩn submenu mặc định */
    .submenu {
        display: none;
        list-style-type: none;
        padding-left: 20px;
    }

    /* Hiển thị submenu khi có class 'open' */
    .has-submenu.open .submenu {
        display: block;
    }
    /* chỉnh icon cho app menu' */
    .app-menu__item {
        text-decoration: none;
        color: #333;
        padding: 10px 20px;
        display: block;
        transition: background-color 0.3s ease;
    }

        .app-menu__item:hover {
            background-color: #ddd;
        }

    .submenu .app-menu__item {
        padding-left: 40px; /* Đẩy các mục con thụt vào */
    }

    .app-menu__item {
        display: flex;
        align-items: center;
        text-decoration: none;
        color: #333;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
    }

        .app-menu__item i {
            margin-right: 10px; /* Khoảng cách giữa icon và chữ */
            font-size: 18px; /* Kích thước icon */
        }

        .app-menu__item:hover {
            background-color: #ddd;
        }

    .top-bar {
        background-color: #f8f9fa; /* Light gray background */
        padding: 10px 20px;
        border-radius: 8px;
    }

        /* Link button styling */
        .top-bar .btn {
            margin-left: 10px;
            color: #343a40; /* Default dark color for text */
        }



    /* Container */


    /* Top Bar */
    .top-bar {
        margin-bottom: 20px;
    }

    .search-container input[type="search"] {
        border-radius: 4px;
        padding: 5px 10px;
        width: 250px;
    }

    /* Container styling */
    .tile {
        padding: 20px;
        border-radius: 10px;
        background-color: #f9f9f9;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* General Card Styling */
    /* Container styling */
    .tile {
        padding: 20px;
        border-radius: 10px;
        background-color: #f9f9f9;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Card styling */
    .event-card {
        display: flex;
        align-items: flex-start;
        gap: 20px;
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 8px;
        transition: box-shadow 0.3s ease;
    }


    /* Image container */
    .event-image-container {
        flex-shrink: 0;
        width: 200px; /* Fixed width for the image */
        text-align: center;
    }

    .event-thumbnail {
        width: 100%;
        height: 250px; /* Set a fixed height */
        object-fit: cover; /* Crop the image to fit within the specified height */
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }



        .event-thumbnail:hover {
            transform: scale(1.05);
        }
    /* File input styling */
    .file-input {
        margin-top: 10px;
        padding: 5px;
        font-size: 0.9rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        cursor: pointer;
        width: 100px; /* Set a fixed width to make it smaller horizontally */
        max-width: 100%; /* Ensure it does not exceed container width on smaller screens */
    }

    /* Event details */
    .event-details {
        flex: 1;
    }

        .event-details label {
            font-weight: 500;
            color: #555;
        }

        .event-details input,
        .event-details textarea {
            width: 100%;
            padding: 8px;
            font-size: 0.95rem;
            border: 1px solid #ddd;
            border-radius: 5px;
            transition: border-color 0.3s;
        }

            .event-details input:focus,
            .event-details textarea:focus {
                border-color: #007bff;
                outline: none;
            }

    /* Inline input styling */
    .small-input-inline {
        max-width: 150px;
        padding: 8px;
    }


    /* Adjusting icon and label spacing */
    .event-details i {
        margin-right: 4px; /* Reducing the right margin to bring the icon closer to the label */
        font-size: 1.2rem; /* Adjust icon size if necessary */
    }

    .event-details label,
    .event-details span {
        margin-right: 6px; /* Reducing the spacing between label text and the input field */
        font-weight: 500;
    }

    .event-details .d-flex.align-items-center.mb-3 {
        gap: 8px; /* Adds a smaller gap between elements */
    }

    /* Adjusting form control for a more compact look */
    .form-control.small-input-inline {
        padding: 6px 8px; /* Adjusting padding to make inputs more compact */
    }

    .modal {
        display: none; /* Ẩn mặc định */
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 9999;
    }

        .modal[style*="display: block"] {
            display: block; /* Hiển thị khi được gán */
        }

    .action-container {
        display: flex; /* Sử dụng flexbox */
        align-items: center; /* Căn giữa theo chiều dọc */
        justify-content: flex-start; /* Căn tất cả về bên trái */
        gap: 10px; /* Khoảng cách giữa chữ và nút */
        width: 100%; /* Đảm bảo vùng chứa rộng 100% */
    }

    .action-title {
        font-size: 1.2rem;
        font-weight: bold;
        color: #333;
        margin: 0;
    }

    .action-buttons {
        display: flex;
        justify-content: flex-end; /* Căn các nút về phía cuối */
        align-items: center;
    }

    .action-button {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 10px 16px;
        font-size: 1rem;
        font-weight: bold;
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        width: auto;
        height: 45px;
    }

    .block-button {
        background-color: #ff4d4d; /* Màu đỏ cho nút chặn */
    }

    .unblock-button {
        background-color: #4CAF50; /* Màu xanh cho nút mở chặn */
    }

    .action-button i {
        margin-right: 8px; /* Khoảng cách giữa icon và text */
    }
  
</style>

<body onload="time()" class="app sidebar-mini rtl">
    <header class="app-header" style="display: flex; align-items: center; padding: 0 15px; background-color: #f6f5f5 !important;">
        <!-- Sidebar Toggle -->
        <a class="app-sidebar__toggle" href="#" data-toggle="sidebar" aria-label="Hide Sidebar" style="margin-right: auto;">
            <!-- Add an icon or text for the sidebar toggle -->
        </a>

        <!-- Centered Logo -->
        <div style="flex: 500; display: flex; justify-content: center; align-items: center; padding-left: 50px;">
            <img src="~/images/newlogo.jpg" alt="Logo" style="height: auto; width: 55%; max-width: 120px;margin-top: 10px;">
        </div>


        <!-- User Menu -->
        <ul class="app-nav" style="display: flex; align-items: center; margin-left: auto; list-style: none; padding: 0;">
            <li>
                <a class="app-nav__item" href="~/Home" style="display: flex; align-items: center; text-decoration: none; color: black; background: rgb(195 195 195); padding: 10px 15px; border-radius: 5px; transition: background-color 0.3s;">
                    <!-- Replace with an icon -->
                    <i class="bx bx-home" style="font-size: 1.5rem; margin-right: 8px;"></i>
                    <!-- Add text next to the icon -->
                    <span style="font-size: 1rem;">Quay lại trang chủ</span>
                </a>
            </li>
        </ul>

    </header>
    <!-- Sidebar menu-->
    <div class="app-sidebar__overlay" data-toggle="sidebar"></div>
    <aside class="app-sidebar">
        <a class="app-sidebar__toggle" href="#" data-toggle="sidebar" aria-label="Hide Sidebar" style="margin-right: auto;">
            <!-- Add an icon or text for the sidebar toggle -->
        </a>
        <div class="app-sidebar__user">
            @if (@HttpContextAccessor.HttpContext.Session.GetString("Img") == null)
            {

                <img src="~/images/p22.jpg" alt="Trang cá nhân" class="app-sidebar__user-avatar" width="50px">

            }
            else
            {
                <img src="@HttpContextAccessor.HttpContext.Session.GetString("Img")" alt="Trang cá nhân" class="app-sidebar__user-avatar" src="~/images/img_1.jpg" width="50px">
            }               <div>
                <p class="app-sidebar__user-designation">Xin chào</p>

                <p class="app-sidebar__user-name"><b>@HttpContextAccessor.HttpContext.Session.GetString("Fullname")</b></p>
            </div>
        </div>
        <hr>
        <ul class="app-menu">
            <style>


                .app-menu__item.selected {
                    font-weight: bold;
                }

            </style>
            @if (HttpContextAccessor.HttpContext.Session.GetInt32("RoleId") == 1)
            {
                <li>
                    <a class="app-menu__item" href="~/DashBoard">
                        <i class='app-menu__icon bx bx-task'></i>
                        <span class="app-menu__label">Thống kê</span>
                    </a>
                </li>
            }
            <li class="has-submenu" style="display:block" id="manageOrdersMenu">
                <a class="app-menu__item" href="javascript:void(0)" id="manageOrders">
                    <i class='app-menu__icon bx bx-id-card'></i>
                    <span class="app-menu__label">Quản lý Đơn hàng</span>
                </a>
                <!-- Submenu items -->
                <ul class="submenu" style="display: none;" id="submenuList">
                    <li>
                        <a href="~/OrderManagement/OrderOnline" class="app-menu__item" id="orderOnline">
                            <i class='bx bx-notepad'></i> Đơn đặt trước
                        </a>
                    </li>
                    <li>
                        <a href="~/OrderManagement/OrderUsing" class="app-menu__item" id="orderUsing">
                            <i class='bx bx-time-five'></i> Đơn đang sử dụng
                        </a>
                    </li>
                    <li>
                        <a href="~/OrderManagement/OrderCheckOut" class="app-menu__item" id="orderCheckOut">
                            <i class='bx bx-check-circle'></i> Đơn đã thanh toán
                        </a>
                    </li>
                    <li>
                        <a href="~/OrderManagement/OrderCancel" class="app-menu__item" id="orderCancel">
                            <i class='bx bx-x-circle'></i> Đơn đã hủy
                        </a>
                    </li>
                    <li>
                        <a href="~/OrderManagement/CreateOrder" class="app-menu__item" id="createOrder">
                            <i class='bx bx-plus'></i> Tạo đơn mới
                        </a>
                    </li>
                </ul>
            </li>

            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    var currentUrl = window.location.pathname;
                    var manageOrdersMenu = document.getElementById("manageOrdersMenu");

                    // Kiểm tra các URL và thêm lớp selected tương ứng
                    if (currentUrl.includes("OrderOnline")) {
                        document.getElementById("orderOnline").classList.add("selected");
                        manageOrdersMenu.classList.add("selected");
                    } else if (currentUrl.includes("OrderUsing")) {
                        document.getElementById("orderUsing").classList.add("selected");
                        manageOrdersMenu.classList.add("selected");
                    } else if (currentUrl.includes("OrderCheckOut")) {
                        document.getElementById("orderCheckOut").classList.add("selected");
                        manageOrdersMenu.classList.add("selected");
                    } else if (currentUrl.includes("OrderCancel")) {
                        document.getElementById("orderCancel").classList.add("selected");
                        manageOrdersMenu.classList.add("selected");
                    } else if (currentUrl.includes("CreateOrder")) {
                        document.getElementById("createOrder").classList.add("selected");
                        manageOrdersMenu.classList.add("selected");
                    }
                });
                document.addEventListener("DOMContentLoaded", function () {
                    const submenu = document.getElementById("submenuList");
                    const manageOrdersButton = document.getElementById("manageOrders");
                    const submenuItems = document.querySelectorAll("#manageOrdersMenu .submenu .app-menu__item");

                    // Kiểm tra URL để tự động mở submenu khi truy cập các mục cụ thể
                    if (window.location.href.includes("OrderOnline") ||
                        window.location.href.includes("OrderUsing") ||
                        window.location.href.includes("OrderCheckOut") ||
                        window.location.href.includes("OrderCancel") ||
                        window.location.href.includes("CreateOrder")) {
                        submenu.style.display = "block";
                    }

                    // Toggle submenu khi click vào "Quản lý Đơn hàng"
                    manageOrdersButton.addEventListener("click", function (event) {
                        event.stopPropagation(); // Ngăn sự kiện lan truyền
                        submenu.style.display = submenu.style.display === "block" ? "none" : "block";
                    });

                    // Đảm bảo rằng khi click vào bất kỳ mục con nào, menu vẫn mở
                    submenuItems.forEach(item => {
                        item.addEventListener("click", function (event) {
                            event.stopPropagation(); // Ngăn sự kiện lan truyền
                            submenu.style.display = "block";
                        });
                    });

                    // Đóng menu khi click ra ngoài
                    document.addEventListener("click", function (event) {
                        if (!manageOrdersButton.contains(event.target) && !submenu.contains(event.target)) {
                            submenu.style.display = "none";
                        }
                    });
                });

            </script>
            <li>
                <a class="app-menu__item" href="~/TicketManagement/Index">
                    <i class='app-menu__icon bx bx-receipt'></i> <!-- Receipt icon as alternative -->
                    <span class="app-menu__label">Quản lý vé</span>
                </a>
            </li>

            <li>
                <a class="app-menu__item" href="~/GearManagement/Index">
                    <i class='app-menu__icon bx bx-wrench'></i> <!-- Gear/Tools icon -->
                    <span class="app-menu__label">Quản lý dụng cụ</span>
                </a>
            </li>
            <li>
                <a class="app-menu__item" href="~/FoodAndDrinkManagement/Index">
                    <i class='app-menu__icon bx bx-coffee'></i> <!-- Food and drink icon -->
                    <span class="app-menu__label">Quản lý đồ ăn</span>
                </a>
            </li>
            <li>
                <a class="app-menu__item" href="~/EventManagement/Index">
                    <i class='app-menu__icon bx bx-calendar-event'></i>
                    <span class="app-menu__label">Quản lý sự kiện</span>
                </a>
            </li>
            @if (HttpContextAccessor.HttpContext.Session.GetInt32("RoleId") == 1)
            {
                <li class="app-menu__item active">
                    <a href="~/UserManagement/Index" class="app-menu__link">
                        <i class='app-menu__icon bx bx-user-voice'></i>
                        <span class="app-menu__label">Quản lý khách hàng</span>
                    </a>
                </li>

                <li>
                    <a class="app-menu__item" href="~/EmployeeManagement/Index">
                        <i class='app-menu__icon bx bx-purchase-tag-alt'></i>
                        <span class="app-menu__label">Quản lý nhân viên</span>
                    </a>
                </li>
            }

        </ul>
    </aside>
    <main class="app-content">
        <div class="app-title">
            <ul class="app-breadcrumb breadcrumb side">
                <li class="breadcrumb-item active">Quản lí người dùng/Chi tiết người dùng</li>
            </ul>
            <div id="clock"></div>
        </div>

        <div class="row">
    <div class="col-md-12">
        <div class="tile">
            <div class="row">
                <!-- Ảnh đại diện bên trái -->
                <div class="col-md-4 d-flex justify-content-center align-items-center flex-column">

                            @if (!string.IsNullOrEmpty(HttpContextAccessor.HttpContext.Session.GetString("UserId")))
                            {
                                @if (@Model.ProfilePictureUrl == null)
                                {
                                    <!-- Default image for logged-in user without a profile picture -->
                                    <img src="~/images/p22.jpg" alt="Trang cá nhân" style="width: 350px; height: 350px; object-fit: cover; border-radius: 50%;">
                                }
                                else
                                {
                                    <!-- Profile picture for logged-in user -->
                                    <img src="@Model.ProfilePictureUrl" alt="Trang cá nhân" style="width: 300px; height: 300px; object-fit: cover; border-radius: 50%;">
                                }
                            }
                            else
                            {
                                <!-- No image is displayed if the user is not logged in -->
                                <p>Vui lòng đăng nhập để xem ảnh.</p>
                            }

                            <p style="font-size: 1.5rem;margin-top: 20px;
    margin-left: 30px;">Ảnh đại diện</p>
          
                </div>

                <!-- Các thông tin khác bên phải -->
                <div class="col-md-8">
                            <div style="display: flex; justify-content: flex-end; margin-top: 16px;">
                                <a href="/UserManagement/Index" style="background-color: #808080; color: white; padding: 8px 12px; border-radius: 4px; text-decoration: none; display: inline-flex; align-items: center; justify-content: center;">
                                    <i class="fas fa-arrow-left" style="margin-right: 4px;"></i> Quay Lại
                                </a>
                            </div>

                        <div class="form-group row">
                            <div class="col-md-6">
                                <label for="firstName">Họ</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                                    <input type="text" class="form-control" id="firstName" placeholder="Nguyen Dang" value="@Model.FirstName" readonly>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <label for="lastName">Tên</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                                            <input type="text" class="form-control" id="lastName" placeholder="Hoang" value="@Model.LastName" readonly>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="email">Email</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                <input type="email" class="form-control" id="email" placeholder="jane.smith@example.com" value="@Model.Email" readonly>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="password">Mật khẩu</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                        <input type="password" class="form-control" id="password" placeholder="Nhập mật khẩu" value="@Model.Password" readonly>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="phoneNumber">Số điện thoại</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                <input type="text" class="form-control" id="phoneNumber" placeholder="0987654321" value="@Model.PhoneNumber" readonly>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="address">Địa chỉ</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                                        <input type="text" class="form-control" id="address" placeholder="456 Elm St, Riverside" value="@Model.Address" readonly>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="dateOfBirth">Ngày sinh</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                        <input type="date" class="form-control" id="dateOfBirth"
                                               value="@(Model.DateOfBirth != null ? Model.DateOfBirth.Value.ToString("yyyy-MM-dd") : "")" readonly>
                                    </div>
                        </div>

                        <div class="form-group">
                            <label for="gender">Giới tính</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-venus-mars"></i></span>
                                    <input type="text" class="form-control" id="gender"
                                           value="@(Model.Gender?.Trim().ToLower() == "male" ? "Nam" : Model.Gender?.Trim().ToLower() == "female" ? "Nữ" : "Khác")"
                                           readonly>

                            </div>
                        </div>



                            <div class="action-container">
                                <!-- Tiêu đề -->
                                <p class="action-title">Chỉnh trạng thái:</p>

                                <!-- Khu vực nút -->
                                <div class="action-buttons">
                                    @if (@Model.IsActive == true)
                                    {
                                        <!-- Form Chặn -->
                                        <form id="blockForm_@Model.UserId" asp-controller="UserManagement" asp-action="BlockUser" asp-route-id="@Model.UserId" method="post">
                                            <button type="button" class="action-button block-button" data-action="block" data-form-id="blockForm_@Model.UserId" onclick="showConfirmationModal(this);">
                                                <i class="fas fa-lock"></i> Chặn
                                            </button>
                                        </form>
                                    }
                                    else if (@Model.IsActive == false)
                                    {
                                        <!-- Form Mở Chặn -->
                                        <form id="unblockForm_@Model.UserId" asp-controller="UserManagement" asp-action="UnBlockUser" asp-route-id="@Model.UserId" method="post">
                                            <button type="button" class="action-button unblock-button" data-action="unblock" data-form-id="unblockForm_@Model.UserId" onclick="showConfirmationModal(this);">
                                                <i class="fas fa-lock-open"></i> Mở Chặn
                                            </button>
                                        </form>
                                    }
                                </div>
                            </div>




                            <!-- Confirmation Modal -->
                            <div id="confirmationModal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); justify-content: center; align-items: center;">
                                <div style="background: white; padding: 20px; border-radius: 8px; text-align: center; width: 300px;">
                                    <p id="confirmationMessage" style="margin-bottom: 20px;">Bạn có chắc chắn thực hiện hành động này?</p>
                                    <div style="display: flex; justify-content: space-between;">
                                        <button id="confirmButton" style="background-color: #4CAF50; color: white; padding: 8px 12px; border: none; border-radius: 4px; cursor: pointer; flex: 1; margin-right: 8px;">
                                            Xác nhận
                                        </button>
                                        <button id="cancelButton" style="background-color: #ff4d4d; color: white; padding: 8px 12px; border: none; border-radius: 4px; cursor: pointer; flex: 1;">
                                            Hủy
                                        </button>
                                    </div>
                                </div>
                            </div>


                </div>
            </div>
        </div>
    </div>
</div>












    </main>
    <script>
        function showConfirmationModal(button) {
            const modal = document.getElementById("confirmationModal");
            const confirmButton = document.getElementById("confirmButton");
            const cancelButton = document.getElementById("cancelButton");
            const formId = button.getAttribute("data-form-id");

            // Hiển thị modal
            modal.style.display = "flex";

            // Cập nhật thông báo trong modal
            const action = button.getAttribute("data-action");
            const message = action === "block" ? "Bạn có chắc chắn muốn chặn người dùng này?" : "Bạn có chắc chắn muốn mở chặn người dùng này?";
            document.getElementById("confirmationMessage").textContent = message;

            // Xử lý khi bấm nút Xác nhận
            confirmButton.onclick = function () {
                document.getElementById(formId).submit(); // Gửi form tương ứng
                modal.style.display = "none"; // Ẩn modal
            };

            // Xử lý khi bấm nút Hủy
            cancelButton.onclick = function () {
                modal.style.display = "none"; // Ẩn modal
            };
        }

        // Ẩn modal khi bấm bên ngoài
        window.onclick = function (event) {
            const modal = document.getElementById("confirmationModal");
            if (event.target === modal) {
                modal.style.display = "none";
            }
        };


    </script>
    <script>
        function confirmDelete(eventId) {
            // Create a confirmation modal
            const confirmationModal = document.createElement('div');
            confirmationModal.innerHTML = `
                        <div class="modal-overlay">
                            <div class="modal-content">
                                <p>Bạn có chắc chắn muốn xóa không?</p>
                                <div class="modal-buttons">
                                    <button onclick="deleteEvent(${eventId})" class="btn-confirm">Xác nhận</button>
                                    <button onclick="closeModal()" class="btn-cancel">Hủy</button>
                                </div>
                            </div>
                        </div>
                    `;
            document.body.appendChild(confirmationModal);
        }

        function deleteEvent(eventId) {
            // Redirect to delete action
            window.location.href = `/EventManagement/DeleteEvent/${eventId}`;
        }

        function closeModal() {
            const modal = document.querySelector('.modal-overlay');
            if (modal) modal.remove();
        }

    </script>

    <script>

        document.getElementById('manageOrders').addEventListener('click', function () {
            this.parentElement.classList.toggle('open'); // Bật/tắt class 'open' để mở/đóng submenu
        });

    </script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function previewImage(event, eventId) {
            const fileInput = event.target;
            const file = fileInput.files[0]; // Lấy file ảnh từ input

            if (file) {
                // Tạo URL đối tượng tạm thời cho ảnh mới
                const newImageUrl = URL.createObjectURL(file);

                // Tìm phần tử ảnh hiện tại
                let currentImage = document.getElementById(`currentImage_${eventId}`);

                if (currentImage) {
                    // Nếu đã có ảnh cũ, cập nhật src với ảnh mới
                    currentImage.src = newImageUrl;
                } else {
                    // Nếu chưa có ảnh, tạo phần tử ảnh mới để hiển thị
                    currentImage = document.createElement("img");
                    currentImage.src = newImageUrl;
                    currentImage.alt = "Event Image";
                    currentImage.className = "event-thumbnail";
                    currentImage.id = `currentImage_${eventId}`;

                    // Thêm ảnh mới vào DOM trước input file
                    fileInput.parentElement.insertBefore(currentImage, fileInput);
                }

                // Giải phóng URL đối tượng khi ảnh đã được tải
                currentImage.onload = function () {
                    URL.revokeObjectURL(newImageUrl);
                };
            }
        }
    </script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Essential javascripts for application to work-->
    <script src="~/js/jquery-3.2.1.min.js"></script>
    <script src="~/js/popper.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="~/src/jquery.table2excel.js"></script>
    <script src="~/js/main.js"></script>
    <!-- The javascript plugin to display page loading on top-->
    <script src="js/plugins/pace.min.js"></script>
    <!-- Page specific javascripts-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
    <!-- Data table plugin-->
    <script type="text/javascript" src="~/js/plugins/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="~/js/plugins/dataTables.bootstrap.min.js"></script>
    <script type="text/javascript">$('#sampleTable').DataTable();</script>
    <script>

        oTable = $('#sampleTable').dataTable();
        $('#all').click(function (e) {
            $('#sampleTable tbody :checkbox').prop('checked', $(this).is(':checked'));
            e.stopImmediatePropagation();
        });


        function time() {
            var today = new Date();
            var weekday = new Array(7);
            weekday[0] = "Chủ Nhật";
            weekday[1] = "Thứ Hai";
            weekday[2] = "Thứ Ba";
            weekday[3] = "Thứ Tư";
            weekday[4] = "Thứ Năm";
            weekday[5] = "Thứ Sáu";
            weekday[6] = "Thứ Bảy";
            var day = weekday[today.getDay()];
            var dd = today.getDate();
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear();
            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            m = checkTime(m);
            s = checkTime(s);
            nowTime = h + " giờ " + m + " phút " + s + " giây";
            if (dd < 10) {
                dd = '0' + dd
            }
            if (mm < 10) {
                mm = '0' + mm
            }
            today = day + ', ' + dd + '/' + mm + '/' + yyyy;
            tmp = '<span class="date"> ' + today + ' - ' + nowTime +
                '</span>';
            document.getElementById("clock").innerHTML = tmp;
            clocktime = setTimeout("time()", "1000", "Javascript");

            function checkTime(i) {
                if (i < 10) {
                    i = "0" + i;
                }
                return i;
            }
        }
        ;
    </script>
</body>

</html>
