@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model List<Account>
@using GreenGardenClient.Models





<!DOCTYPE html>
<html lang="en">

<head>
    <title>Danh sách người dùng</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Main CSS-->
    <link rel="stylesheet" type="text/css" href="~/css/main.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <!-- or -->
    <link rel="stylesheet" href="https://unpkg.com/boxicons@latest/css/boxicons.min.css">

    <!-- Font-icon css-->
    <link rel="stylesheet" type="text/css"
          href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <style>
        /* Định nghĩa hiệu ứng nhấp nháy */
        .highlight-row {
            background-color: rgba(144, 238, 144, 0.3); /* Màu xanh lá nhạt ban đầu */
        }
        .notification {
    position: fixed;
    top: 20px; /* Khoảng cách từ trên xuống */
    right: -350px; /* Bắt đầu ngoài viewport */
    z-index: 1050; /* Hiển thị trên các phần tử khác */
    opacity: 1; /* Hiển thị đầy đủ ban đầu */
    transition: transform 0.5s ease-out, opacity 1s ease-out; /* Hiệu ứng mượt */
    max-width: 300px; /* Giới hạn chiều rộng */
    padding: 15px; /* Padding trong thông báo */
    border-radius: 5px; /* Bo tròn góc */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Hiệu ứng đổ bóng */
}

/* Thông báo thành công */
.alert-success {
    background-color: #d4edda; /* Nền xanh lá nhạt */
    color: #155724; /* Chữ xanh lá đậm */
    border: 1px solid #c3e6cb; /* Viền xanh lá */
}

/* Thông báo lỗi */
.alert-danger {
    background-color: #f8d7da; /* Nền đỏ nhạt */
    color: #721c24; /* Chữ đỏ đậm */
    border: 1px solid #f5c6cb; /* Viền đỏ */
}

    </style>


</head>
<header class="app-header">
    <!-- Sidebar toggle button--><a class="app-sidebar__toggle" href="#" data-toggle="sidebar"
                                    aria-label="Hide Sidebar"></a>
    <!-- Navbar Right Menu-->
    <ul class="app-nav">


        <!-- User Menu-->
        <li>
            <a class="app-nav__item" href="/index.html"><i class='bx bx-log-out bx-rotate-180'></i> </a>

        </li>
    </ul>
</header>

@{
    if (TempData["SuccessMessage"] != null)
    {
        <div id="notification-success" class="notification alert alert-success" role="alert">
            <i class="fas fa-bell"></i> <!-- Bell Icon -->
        @TempData["SuccessMessage"]
        </div>
    }

    if (TempData["ErrorMessage"] != null)
    {
        <div id="notification-error" class="notification alert alert-danger" role="alert">
            <i class="fas fa-bell"></i> <!-- Bell Icon -->
        @TempData["ErrorMessage"]
        </div>
    }
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        if ($("#notification").length) {
            setTimeout(function () {
                $("#notification").css("opacity", "0"); // Đặt độ mờ thành 0
                $("#notification").css("transform", "translateY(10px)"); // Đưa thông báo xuống một chút khi ẩn
            }, 3000); // Sau 3 giây
        }
    });
</script>
<style>
    .product-card {
        padding: 15px;
        margin-bottom: 15px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border: none; /* Bỏ viền */
        border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Dấu gạch mờ ngăn cách */
    }

        .product-card:last-child {
            border-bottom: none; /* Bỏ dấu gạch mờ ở sản phẩm cuối cùng */
        }

    .product-image img {
        max-width: 80px;
        border-radius: 5px;
    }

    .product-details {
        flex: 1;
        margin-left: 15px;
    }

    .product-name {
        font-weight: bold;
        color: #d9534f;
    }

    .product-description {
        font-size: 0.9em;
        color: #555;
    }

    .product-price {
        font-weight: bold;
        color: #000;
    }

    .discounted-price {
        text-decoration: line-through;
        color: gray;
    }

    .btn-add {
        background-color: #d9534f;
        color: white;
    }

    .quantity-control {
        display: flex;
        align-items: center;
    }

    .btn-quantity {
        background-color: transparent;
        border: none;
        font-size: 18px; /* Kích thước nhỏ hơn */
        color: red;
        cursor: pointer;
        padding: 5px 10px;
    }

    .quantity-value {
        margin: 0 10px;
        font-size: 13px; /* Kích thước nhỏ hơn */
        font-weight: bold;
    }

    .search-container {
        display: flex;
        align-items: center;
        justify-content: flex-start;
    }

        .search-container label {
            margin-right: 10px; /* Khoảng cách giữa nhãn và ô input */
            font-weight: bold; /* Làm đậm nhãn để giống trong hình */
        }

        .search-container input {
            background-color: #f5f5f5; /* Màu nền cho ô input */
            border: 1px solid #ddd; /* Viền nhạt cho ô input */
            padding: 5px;
            border-radius: 5px; /* Bo góc cho ô input */
            width: 200px; /* Độ rộng cho ô input */
        }

    .pagination {
        display: flex;
        align-items: center;
        justify-content: flex-end; /* Căn chỉnh các phần tử về phía bên phải */
    }

    .container-pagination-cart {
        display: flex;
        justify-content: space-between; /* Đưa nút giỏ hàng sang trái và phân trang sang phải */
        align-items: center; /* Căn giữa theo chiều dọc */
        margin-bottom: 20px; /* Khoảng cách dưới nếu cần */
    }

    .pagination {
        list-style: none; /* Bỏ các dấu bullet */
        padding: 0;
        margin: 0;
        display: flex; /* Hiển thị các mục theo hàng ngang */
    }

        .pagination li {
            margin-left: 5px; /* Khoảng cách giữa các nút */
        }

    .page-link {
        text-decoration: none;
        padding: 5px 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
        color: #007bff;
    }

    .btn-primary {
        display: flex;
        align-items: center;
        font-size: 16px;
        padding: 5px 10px;
    }


    /* Đặt nền màu #eee cho cả header và sidebar */
    .app-header, .app-sidebar {
        background-color: #eee;
    }

    .app-header {
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        width: 100%;
        display: flex;
        align-items: center;
        padding: 15px;
        z-index: 1;
    }

        .app-header .app-nav {
            margin-left: auto;
        }

    .app-nav__item {
        text-decoration: none;
        color: #333;
        padding: 8px 15px;
        display: flex;
        align-items: center;
    }

    .app-sidebar {
        position: fixed;
        top: 0px; /* Để không đè lên header */
        left: 0;
        width: 250px;
        height: 100%;
        padding-top: 20px;
        background-color: #eee;
        border-right: 1px solid #ccc; /* Viền phải của sidebar */
    }

    .app-sidebar__user {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .app-sidebar__user-avatar {
        width: 100px; /* hoặc một giá trị cụ thể khác tùy thuộc vào kích thước bạn muốn */
        height: 100px; /* cần phải bằng width */
        border-radius: 50%;
        margin-right: 10px;
        object-fit: cover; /* Đảm bảo hình ảnh không bị méo */
    }

    .app-sidebar__user-name {
        margin: 0;
        font-weight: bold;
        color: black;
    }

    .app-sidebar__user-designation {
        margin: 0;
        color: black;
    }

    .app-menu {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .app-menu__item {
        text-decoration: none;
        color: #333;
        display: flex;
        align-items: center;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
    }

        .app-menu__item:hover {
            background-color: #ddd;
        }

    .app-menu__icon {
        margin-right: 10px;
        color: #333;
    }

    .app-menu__item.active {
        background-color: #ccc;
        font-weight: bold;
    }

    hr {
        border: 1px solid #ccc;
        margin: 10px 0;
    }
    /* Ẩn submenu mặc định */
    .submenu {
        display: none;
        list-style-type: none;
        padding-left: 20px;
    }

    /* Hiển thị submenu khi có class 'open' */
    .has-submenu.open .submenu {
        display: block;
    }
    /* chỉnh icon cho app menu' */
    .app-menu__item {
        text-decoration: none;
        color: #333;
        padding: 10px 20px;
        display: block;
        transition: background-color 0.3s ease;
    }

        .app-menu__item:hover {
            background-color: #ddd;
        }

    .submenu .app-menu__item {
        padding-left: 40px; /* Đẩy các mục con thụt vào */
    }

    .app-menu__item {
        display: flex;
        align-items: center;
        text-decoration: none;
        color: #333;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
    }

        .app-menu__item i {
            margin-right: 10px; /* Khoảng cách giữa icon và chữ */
            font-size: 18px; /* Kích thước icon */
        }

        .app-menu__item:hover {
            background-color: #ddd;
        }

    .block-button {
        display: inline-flex;
        align-items: center;
        padding: 8px 12px;
        color: white;
        background-color: red; /* Customize color as needed */
        border-radius: 4px;
        text-decoration: none; /* Remove underline */
    }

        .block-button:hover {
            background-color: darkred; /* Darken color on hover */
        }

    .unblock-button {
        color: green; /* Change to a color representing "unblock" */
        background-color: transparent;
        border: none;
        cursor: pointer;
    }

        .unblock-button:hover {
            color: darkgreen;
        }

    .block-button, .unblock-button {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px; /* Set a consistent width */
        height: 40px; /* Set a consistent height */
        border: none;
        background-color: transparent;
        cursor: pointer;
    }

        .block-button i {
            color: red; /* Color for block icon */
            font-size: 24px; /* Icon size */
        }

        .unblock-button i {
            color: green; /* Color for unblock icon */
            font-size: 24px; /* Icon size */
        }

    .modal {
        display: none; /* Hidden by default */
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: white;
        margin: 15% auto;
        padding: 20px;
        width: 300px;
        text-align: center;
        border-radius: 8px;
    }

    .confirm-button, .cancel-button {
        padding: 10px 20px;
        margin: 10px;
        cursor: pointer;
    }

    .confirm-button {
        background-color: green;
        color: white;
        border: none;
    }

    .cancel-button {
        background-color: red;
        color: white;
        border: none;
    }

    .notification {
        position: fixed;
        top: 10px;
        right: 10px;
        transform: translateX(350px);
        opacity: 1;
        transition: transform 0.5s ease, opacity 0.5s ease;
    }

</style>
<body onload="time()" class="app sidebar-mini rtl">
    <header class="app-header" style="display: flex; align-items: center; padding: 0 15px; background-color: #f6f5f5 !important;">
        <!-- Sidebar Toggle -->
        <a class="app-sidebar__toggle" href="#" data-toggle="sidebar" aria-label="Hide Sidebar" style="margin-right: auto;">
            <!-- Add an icon or text for the sidebar toggle -->
        </a>

        <!-- Centered Logo -->
        <div style="flex: 500; display: flex; justify-content: center; align-items: center; padding-left: 50px;">
            <img src="~/images/newlogo.jpg" alt="Logo" style="height: auto; width: 55%; max-width: 120px;margin-top: 10px;">
        </div>


        <!-- User Menu -->
        <ul class="app-nav" style="display: flex; align-items: center; margin-left: auto; list-style: none; padding: 0;">
            <li>
                <a class="app-nav__item" href="~/Home" style="display: flex; align-items: center; text-decoration: none; color: black; background: rgb(195 195 195); padding: 10px 15px; border-radius: 5px; transition: background-color 0.3s;">
                    <!-- Replace with an icon -->
                    <i class="bx bx-home" style="font-size: 1.5rem; margin-right: 8px;"></i>
                    <!-- Add text next to the icon -->
                    <span style="font-size: 1rem;">Quay lại trang chủ</span>
                </a>
            </li>
        </ul>

    </header>

    <!-- Sidebar menu-->
    <div class="app-sidebar__overlay" data-toggle="sidebar"></div>
    <aside class="app-sidebar">
        <a class="app-sidebar__toggle" href="#" data-toggle="sidebar" aria-label="Hide Sidebar" style="margin-right: auto;">
            <!-- Add an icon or text for the sidebar toggle -->
        </a>
        <div class="app-sidebar__user">
            @if (@HttpContextAccessor.HttpContext.Session.GetString("Img") == null)
            {

                <img src="~/images/p22.jpg" alt="Trang cá nhân" class="app-sidebar__user-avatar" width="50px">

            }
            else
            {
                <img src="@HttpContextAccessor.HttpContext.Session.GetString("Img")" alt="Trang cá nhân" class="app-sidebar__user-avatar" src="~/images/img_1.jpg" width="50px">
            }               <div>
                <p class="app-sidebar__user-designation">Xin chào</p>

                <p class="app-sidebar__user-name"><b>@HttpContextAccessor.HttpContext.Session.GetString("Fullname")</b></p>
            </div>
        </div>
        <hr>
        <ul class="app-menu">
            <style>


                .app-menu__item.selected {
                    font-weight: bold;
                }

            </style>
            @if (HttpContextAccessor.HttpContext.Session.GetInt32("RoleId") == 1)
            {
                <li>
                    <a class="app-menu__item" href="~/DashBoard">
                        <i class='app-menu__icon bx bx-task'></i>
                        <span class="app-menu__label">Thống kê</span>
                    </a>
                </li>
            }
            <li class="has-submenu" style="display:block" id="manageOrdersMenu">
                <a class="app-menu__item" href="javascript:void(0)" id="manageOrders">
                    <i class='app-menu__icon bx bx-id-card'></i>
                    <span class="app-menu__label">Quản lý Đơn hàng</span>
                </a>
                <!-- Submenu items -->
                <ul class="submenu" style="display: none;" id="submenuList">
                    <li>
                        <a href="~/OrderManagement/OrderOnline" class="app-menu__item" id="orderOnline">
                            <i class='bx bx-notepad'></i> Đơn đặt trước
                        </a>
                    </li>
                    <li>
                        <a href="~/OrderManagement/OrderUsing" class="app-menu__item" id="orderUsing">
                            <i class='bx bx-time-five'></i> Đơn đang sử dụng
                        </a>
                    </li>
                    <li>
                        <a href="~/OrderManagement/OrderCheckOut" class="app-menu__item" id="orderCheckOut">
                            <i class='bx bx-check-circle'></i> Đơn đã thanh toán
                        </a>
                    </li>
                    <li>
                        <a href="~/OrderManagement/OrderCancel" class="app-menu__item" id="orderCancel">
                            <i class='bx bx-x-circle'></i> Đơn đã hủy
                        </a>
                    </li>
                    <li>
                        <a href="~/OrderManagement/CreateOrder" class="app-menu__item" id="createOrder">
                            <i class='bx bx-plus'></i> Tạo đơn mới
                        </a>
                    </li>
                </ul>
            </li>

            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    var currentUrl = window.location.pathname;
                    var manageOrdersMenu = document.getElementById("manageOrdersMenu");

                    // Kiểm tra các URL và thêm lớp selected tương ứng
                    if (currentUrl.includes("OrderOnline")) {
                        document.getElementById("orderOnline").classList.add("selected");
                        manageOrdersMenu.classList.add("selected");
                    } else if (currentUrl.includes("OrderUsing")) {
                        document.getElementById("orderUsing").classList.add("selected");
                        manageOrdersMenu.classList.add("selected");
                    } else if (currentUrl.includes("OrderCheckOut")) {
                        document.getElementById("orderCheckOut").classList.add("selected");
                        manageOrdersMenu.classList.add("selected");
                    } else if (currentUrl.includes("OrderCancel")) {
                        document.getElementById("orderCancel").classList.add("selected");
                        manageOrdersMenu.classList.add("selected");
                    } else if (currentUrl.includes("CreateOrder")) {
                        document.getElementById("createOrder").classList.add("selected");
                        manageOrdersMenu.classList.add("selected");
                    }
                });
                document.addEventListener("DOMContentLoaded", function () {
                    const submenu = document.getElementById("submenuList");
                    const manageOrdersButton = document.getElementById("manageOrders");
                    const submenuItems = document.querySelectorAll("#manageOrdersMenu .submenu .app-menu__item");

                    // Kiểm tra URL để tự động mở submenu khi truy cập các mục cụ thể
                    if (window.location.href.includes("OrderOnline") ||
                        window.location.href.includes("OrderUsing") ||
                        window.location.href.includes("OrderCheckOut") ||
                        window.location.href.includes("OrderCancel") ||
                        window.location.href.includes("CreateOrder")) {
                        submenu.style.display = "block";
                    }

                    // Toggle submenu khi click vào "Quản lý Đơn hàng"
                    manageOrdersButton.addEventListener("click", function (event) {
                        event.stopPropagation(); // Ngăn sự kiện lan truyền
                        submenu.style.display = submenu.style.display === "block" ? "none" : "block";
                    });

                    // Đảm bảo rằng khi click vào bất kỳ mục con nào, menu vẫn mở
                    submenuItems.forEach(item => {
                        item.addEventListener("click", function (event) {
                            event.stopPropagation(); // Ngăn sự kiện lan truyền
                            submenu.style.display = "block";
                        });
                    });

                    // Đóng menu khi click ra ngoài
                    document.addEventListener("click", function (event) {
                        if (!manageOrdersButton.contains(event.target) && !submenu.contains(event.target)) {
                            submenu.style.display = "none";
                        }
                    });
                });

            </script>
            <li>
                <a class="app-menu__item" href="~/TicketManagement/Index">
                    <i class='app-menu__icon bx bx-receipt'></i> <!-- Receipt icon as alternative -->
                    <span class="app-menu__label">Quản lý vé</span>
                </a>
            </li>

            <li>
                <a class="app-menu__item" href="~/GearManagement/Index">
                    <i class='app-menu__icon bx bx-wrench'></i> <!-- Gear/Tools icon -->
                    <span class="app-menu__label">Quản lý dụng cụ</span>
                </a>
            </li>
            <li>
                <a class="app-menu__item" href="~/FoodAndDrinkManagement/Index">
                    <i class='app-menu__icon bx bx-coffee'></i> <!-- Food and drink icon -->
                    <span class="app-menu__label">Quản lý đồ ăn</span>
                </a>
            </li>
            <li>
                <a class="app-menu__item" href="~/EventManagement/Index">
                    <i class='app-menu__icon bx bx-calendar-event'></i>
                    <span class="app-menu__label">Quản lý sự kiện</span>
                </a>
            </li>
            @if (HttpContextAccessor.HttpContext.Session.GetInt32("RoleId") == 1)
            {
                <li class="app-menu__item active">
                    <a href="~/UserManagement/Index" class="app-menu__link">
                        <i class='app-menu__icon bx bx-user-voice'></i>
                        <span class="app-menu__label">Quản lý khách hàng</span>
                    </a>
                </li>

                <li>
                    <a class="app-menu__item" href="~/EmployeeManagement/Index">
                        <i class='app-menu__icon bx bx-purchase-tag-alt'></i>
                        <span class="app-menu__label">Quản lý nhân viên</span>
                    </a>
                </li>
            }

        </ul>
    </aside>
    <main class="app-content">
        <div class="app-title">
            <ul class="app-breadcrumb breadcrumb side">
                <li class="breadcrumb-item active">Quản lý người dùng</li>
            </ul>
            <div id="clock"></div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="tile">

                    <table class="table table-hover table-bordered js-copytextarea" cellpadding="0" cellspacing="0" border="0"
                           id="sampleTable">
                        <thead>
                            <tr>
                                <th width="10%">Số thứ tự</th>
                                <th width="15%">Họ và tên</th>     
                                <th width="10%">Email</th>   
                      
                                <th width="12%">Số Điện thoại</th>    
                          
                                <th width="14%">Trạng thái</th>
                                <th width="10%">Năm sinh</th>          
                                <th width="10%">Giới tính</th>     
                                <th width="10%">Tính năng</th>


                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int a = 1;
                            }
                            @foreach (var account in Model)
                  
                            {
                                <tr>
                                    <td>@a</td>
                                    <td>@account.FirstName @account.LastName</td>
                                    <td>@account.Email</td>

                                    <td>@account.PhoneNumber</td>

                                    <td>@(account.IsActive ? "Hoạt động" : "Không hoạt động")</td>

                                    <td>
                                        @(account.DateOfBirth != null ? account.DateOfBirth.Value.ToString("dd/MM/yyyy") : "")

                                    </td>

                                    <td>@(account.Gender?.Trim().ToLower() == "male" ? "Nam" : account.Gender?.Trim().ToLower() == "female" ? "Nữ" : "Khác")</td>



                                    <td style="display: flex; justify-content: center; align-items: center;">
                                        <a href="@Url.Action("UpdateUser", "UserManagement", new { id = @account.UserId })">
                                            <i class="fa fa-info-circle"></i> 
                                        </a>
                                    </td>







                                </tr>
                                a++;
                            }

                        </tbody>
                    </table>
          
                </div>
            </div>

        </div>



    </main>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


    <script>

        document.getElementById('manageOrders').addEventListener('click', function () {
            this.parentElement.classList.toggle('open'); // Bật/tắt class 'open' để mở/đóng submenu
        });

    </script>

    <script>
            $(document).ready(function () {
                // Chọn tất cả các thông báo
                $(".notification").each(function () {
                    const notification = $(this);

                    // Thêm hiệu ứng trượt vào viewport
                    setTimeout(function () {
                        notification.css("transform", "translateX(-350px)"); // Trượt vào viewport
                    }, 100); // Delay trước khi bắt đầu trượt

                    // Tự động ẩn sau 5 giây
                    setTimeout(function () {
                        notification.css("opacity", "0"); // Làm mờ dần
                        setTimeout(function () {
                            notification.remove(); // Xóa hoàn toàn sau khi ẩn
                        }, 1000); // Đợi 1 giây sau khi làm mờ
                    }, 5000); // Hiển thị thông báo trong 5 giây
                });
            });
    </script>

    </script>

    <script src="~/js/jquery-3.2.1.min.js"></script>
    <script src="~/js/popper.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="~/src/jquery.table2excel.js"></script>
    <script src="~/js/main.js"></script>
    <!-- The javascript plugin to display page loading on top-->
    <script src="js/plugins/pace.min.js"></script>
    <!-- Page specific javascripts-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>
    <!-- Data table plugin-->
    <script type="text/javascript" src="~/js/plugins/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="~/js/plugins/dataTables.bootstrap.min.js"></script>
    <script type="text/javascript">$('#sampleTable').DataTable();</script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const rows = document.querySelectorAll(".highlight-row");

            rows.forEach(row => {
                let isLight = true;

                // Thiết lập khoảng thời gian để thay đổi màu nền
                setInterval(() => {
                    row.style.backgroundColor = isLight ? "rgba(144, 238, 144, 0.5)" : "rgba(144, 238, 144, 0.3)";
                    isLight = !isLight;
                }, 1000); // Nhấp nháy mỗi 1 giây
            });
        });

        oTable = $('#sampleTable').dataTable();
        $('#all').click(function (e) {
            $('#sampleTable tbody :checkbox').prop('checked', $(this).is(':checked'));
            e.stopImmediatePropagation();
        });
        oTable = $('#sampleTable').dataTable();
        $('#all').click(function (e) {
            $('#sampleTable tbody :checkbox').prop('checked', $(this).is(':checked'));
            e.stopImmediatePropagation();
        });


        function time() {
            var today = new Date();
            var weekday = new Array(7);
            weekday[0] = "Chủ Nhật";
            weekday[1] = "Thứ Hai";
            weekday[2] = "Thứ Ba";
            weekday[3] = "Thứ Tư";
            weekday[4] = "Thứ Năm";
            weekday[5] = "Thứ Sáu";
            weekday[6] = "Thứ Bảy";
            var day = weekday[today.getDay()];
            var dd = today.getDate();
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear();
            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            m = checkTime(m);
            s = checkTime(s);
            nowTime = h + " giờ " + m + " phút " + s + " giây";
            if (dd < 10) {
                dd = '0' + dd
            }
            if (mm < 10) {
                mm = '0' + mm
            }
            today = day + ', ' + dd + '/' + mm + '/' + yyyy;
            tmp = '<span class="date"> ' + today + ' - ' + nowTime +
                '</span>';
            document.getElementById("clock").innerHTML = tmp;
            clocktime = setTimeout("time()", "1000", "Javascript");

            function checkTime(i) {
                if (i < 10) {
                    i = "0" + i;
                }
                return i;
            }
        }
        ;
    </script>
</body>

</html>
